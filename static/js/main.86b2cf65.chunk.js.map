{"version":3,"sources":["App/App.module.scss","../../src/components/Alignment/alignment-context.js","../../src/components/Alignment/Alignment.js","../../src/utils/parsing.js","../../src/components/Collapse/Collapse.js","../../src/components/Alignment/sentence-context.js","../../src/types/types.js","../../src/components/Comments/Comments.js","../../src/components/Alignment/Comments/Comments.js","../../src/components/Segment/Segment.js","../../src/components/Alignment/Segment/Segment.js","../../src/components/Alignment/Sentence/Sentence.js","../../src/components/Xml/Xml.js","../../src/components/Alignment/Xml/Xml.js","App/index.js","App/App.js","index.js"],"names":["module","exports","AlignmentContext","createContext","displayName","Alignment","alignment","children","json","xml","parseString","explicitCharkey","_err","result","xmlToJson","React","Provider","value","propTypes","string","isRequired","node","defaultProps","Collapse","title","beginCollapsed","collapsed","useState","setCollapsed","useEffect","type","className","styles","onClick","bool","SentenceContext","commentType","shape","$","class","_","refsType","nrefs","wordType","n","comment","arrayOf","text","refs","wordListType","lnum","w","sentenceType","wds","alignmentType","sentence","activeType","selected","aligned","objectOf","instanceOf","Set","wordListDls","active","dls","forEach","ii","commentText","map","join","has","push","key","commentDl","Comments","length","CommentsWithContext","Consumer","Segment","toggleActive","words","find","spans","word","classes","innerText","role","tabIndex","onKeyDown","event","pop","wordSpans","func","SegmentWithContext","buildIdMap","alignedText","array","idMap","lnums","language","Array","from","ln","addToSet","outerLnum","outerN","innerLnum","innerN","add","wd","split","lnumRef","nref","lnum1","n1","lnum2","n2","v","WrappedSentence","setActive","sentenceN","wordId","Sentence","tab","indent","repeat","openingTag","name","attributes","close","br","Fragment","Object","entries","attributesToJsx","closingTag","renderComment","renderWord","cmt","txt","renderText","rfs","Xml","wordList","renderWordList","XmlWithContext","App","createElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86b2cf65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alignment\":\"App_alignment__187-N\"};","import { createContext } from 'react';\n\nconst AlignmentContext = createContext();\n\nAlignmentContext.displayName = 'AlignmentContext';\n\nexport default AlignmentContext;\n","import React from 'react';\nimport { node, string } from 'prop-types';\n\nimport { xmlToJson } from '../../utils/parsing';\n\nimport AlignmentContext from './alignment-context';\n\nconst Alignment = ({ alignment, children }) => {\n  const json = xmlToJson(alignment);\n\n  return (\n    <AlignmentContext.Provider value={{ json }}>\n      {children}\n    </AlignmentContext.Provider>\n  );\n};\n\nAlignment.propTypes = {\n  alignment: string.isRequired,\n  children: node,\n};\n\nAlignment.defaultProps = {\n  children: null,\n};\n\nexport default Alignment;\n","import { parseString } from 'xml2js';\n\nconst xmlToJson = (xml) => {\n  let json;\n  parseString(xml, { explicitCharkey: true }, (_err, result) => {\n    json = result;\n  });\n\n  return json;\n};\n\n// eslint-disable-next-line import/prefer-default-export\nexport { xmlToJson };\n","import React, { useState, useEffect } from 'react';\nimport { bool, node, string } from 'prop-types';\n\nimport styles from './Collapse.module.scss';\n\nconst Collapse = ({ title, children, collapsed: beginCollapsed }) => {\n  const [collapsed, setCollapsed] = useState(beginCollapsed);\n  const toggleCollapse = () => setCollapsed(!collapsed);\n\n  useEffect(() => {\n    setCollapsed(beginCollapsed);\n  }, [beginCollapsed]);\n\n  return (\n    <div>\n      <button type=\"button\" className={styles.button} onClick={toggleCollapse}>\n        <div>\n          {title}\n        </div>\n        <div className={styles.right}>\n          {collapsed ? '+' : '-'}\n        </div>\n      </button>\n      {collapsed ? null : children}\n    </div>\n  );\n};\n\nCollapse.propTypes = {\n  title: string.isRequired,\n  children: node.isRequired,\n  collapsed: bool,\n};\n\nCollapse.defaultProps = {\n  collapsed: true,\n};\n\nexport default Collapse;\n","import { createContext } from 'react';\n\nconst SentenceContext = createContext();\n\nSentenceContext.displayName = 'SentenceContext';\n\nexport default SentenceContext;\n","import {\n  arrayOf,\n  instanceOf,\n  objectOf,\n  shape,\n  string,\n} from 'prop-types';\n\nconst commentType = shape({\n  $: shape({\n    class: string.isRequired,\n  }).isRequired,\n  _: string,\n});\n\nconst refsType = shape({\n  $: shape({\n    nrefs: string.isRequired,\n  }).isRequired,\n});\n\nconst wordType = shape({\n  $: shape({\n    n: string.isRequired,\n  }).isRequired,\n  comment: arrayOf(commentType),\n  text: arrayOf(shape({\n    _: string.isRequired,\n  })),\n  refs: arrayOf(refsType),\n});\n\nconst wordListType = shape({\n  $: shape({\n    lnum: string.isRequired,\n  }).isRequired,\n  comment: arrayOf(commentType),\n  w: arrayOf(wordType),\n});\n\nconst sentenceType = shape({\n  $: shape({\n    n: string.isRequired,\n  }).isRequired,\n  wds: arrayOf(wordListType),\n});\n\nconst alignmentType = shape({\n  'aligned-text': shape({\n    sentence: arrayOf(sentenceType).isRequired,\n  }).isRequired,\n});\n\nconst activeType = shape({\n  selected: shape({\n    lnum: string.isRequired,\n    n: string.isRequired,\n  }).isRequired,\n  aligned: objectOf(instanceOf(Set)).isRequired,\n});\n\nexport {\n  commentType,\n  refsType,\n  wordType,\n  wordListType,\n  sentenceType,\n  alignmentType,\n  activeType,\n};\n","import React from 'react';\n\nimport { activeType, sentenceType } from '../../types';\n\nimport styles from './Comments.module.scss';\n\n// eslint-disable-next-line react/prop-types\nconst commentDl = ({ title, value }, lnum, n, ii) => (\n  <dl key={`comment-${lnum}-${n}-${ii}`} className={styles.dl}>\n    <div className={styles.container}>\n      <dt className={styles.dt}>{title}</dt>\n      <dd className={styles.dd}>{value}</dd>\n    </div>\n  </dl>\n);\n\nconst wordListDls = ({ wds, active }) => {\n  const dls = [];\n\n  (wds || []).forEach(({ $: { lnum }, w }) => (\n    (w || []).forEach(({ $: { n }, comment, text }) => (\n      (comment || []).forEach(({ _: commentText }, ii) => {\n        const title = (text || []).map(({ _ }) => _).join(' ');\n\n        if (active && active.aligned && active.aligned[lnum] && active.aligned[lnum].has(n)) {\n          dls.push(commentDl({ title, value: commentText }, lnum, n, ii));\n        }\n      })\n    ))\n  ));\n\n  return dls;\n};\n\nconst Comments = ({ sentence, active }) => {\n  if (!active) {\n    return false;\n  }\n\n  const wds = sentence && sentence.wds;\n  const dls = wordListDls({ wds, active });\n\n  if (dls.length === 0) {\n    return false;\n  }\n\n  return (\n    <div className={styles.comments}>{dls}</div>\n  );\n};\n\nComments.propTypes = {\n  sentence: sentenceType.isRequired,\n  active: activeType,\n};\n\nComments.defaultProps = {\n  active: null,\n};\n\nexport default Comments;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Comments from '../../Comments';\n\nconst CommentsWithContext = () => (\n  <SentenceContext.Consumer>\n    {({ sentence, active }) => (\n      <Comments\n        sentence={sentence}\n        active={active}\n      />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default CommentsWithContext;\n","import React from 'react';\nimport { func, string } from 'prop-types';\n\nimport { activeType, sentenceType } from '../../types';\n\nimport styles from './Segment.module.scss';\n\nconst wordSpans = (words, lnum, active, toggleActive) => {\n  const spans = [];\n\n  words.w.forEach((word) => {\n    const { text, $: { n } } = word;\n    const classes = [styles.word];\n    const innerText = text.map(({ _ }) => _).join(<br />);\n\n    if (active && active.aligned && active.aligned[lnum] && active.aligned[lnum].has(n)) {\n      classes.push(styles.active);\n    }\n    const onClick = () => {\n      toggleActive([lnum, n]);\n    };\n    const onKeyDown = (event) => {\n      const { key } = event;\n\n      if (key === 'Enter') {\n        onClick();\n      }\n    };\n\n    spans.push(\n      <span\n        key={n}\n        role=\"button\"\n        tabIndex=\"0\"\n        className={classes.join(' ')}\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n      >\n        {innerText}\n      </span>,\n    );\n    spans.push(' ');\n  });\n\n  spans.pop();\n\n  return spans;\n};\n\nconst Segment = ({\n  lnum, sentence, active, toggleActive,\n}) => {\n  const words = (sentence && sentence.wds) ? sentence.wds.find(({ $ }) => $.lnum === lnum) : false;\n\n  if (!words) {\n    return false;\n  }\n\n  return (\n    <div className={styles.text}>\n      <p>\n        {wordSpans(words, lnum, active, toggleActive)}\n      </p>\n    </div>\n  );\n};\n\nSegment.propTypes = {\n  lnum: string.isRequired,\n  sentence: sentenceType.isRequired,\n  active: activeType,\n  toggleActive: func,\n};\n\nSegment.defaultProps = {\n  active: null,\n  toggleActive: () => {},\n};\n\nexport default Segment;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport SentenceContext from '../sentence-context';\n\nimport Segment from '../../Segment';\n\nconst SegmentWithContext = ({ lnum }) => (\n  <SentenceContext.Consumer>\n    {({ sentence, active, toggleActive }) => (\n      <Segment\n        lnum={lnum}\n        sentence={sentence}\n        active={active}\n        toggleActive={toggleActive}\n      />\n    )}\n  </SentenceContext.Consumer>\n);\n\nSegmentWithContext.propTypes = {\n  lnum: string.isRequired,\n};\n\nexport default SegmentWithContext;\n","import React, { useState, useEffect } from 'react';\nimport { node, string } from 'prop-types';\n\nimport { alignmentType } from '../../../types';\n\nimport AlignmentContext from '../alignment-context';\nimport SentenceContext from '../sentence-context';\n\nconst uniq = (array) => Array.from(new Set(array));\n\n// The XML structure used by Perseids for alignments includes some gotchas:\n//   * Word IDs are not globally unique\n//   * It is possible for A to be aligned with B without B being aligned with A\n//   * References do not have a field for lnum, meaning that alignments with more\n//     than one language are impossible\n// Future versions of Perseids should improve on the format, but this application needs\n// to be backwards compatible. This function converts the XML into an object that looks\n// like this (assuming languages have lnums of L1 and L2):\n// {\n//   L1: {\n//     '1-1': {\n//       L1: Set(['1-1', '1-2']),\n//       L2: Set(['1-3']),\n//     },\n//     '1-2': {\n//       L1: Set(['1-1', '1-2']),\n//       L2: Set(['1-3']),\n//     },\n//   },\n//   L2: {\n//     '1-3': {\n//       L1: Set(['1-1', '1-2']),\n//       L2: Set(['1-3']),\n//     },\n//   }\n// }\n// What this means is that words 1-1 and 1-2 in L1 are aligned with word 1-3 in L2.\nconst buildIdMap = (alignedText, sentence) => {\n  const idMap = {};\n\n  const lnums = uniq(alignedText.language.map(({ $: { lnum } }) => lnum));\n  lnums.forEach((ln) => { idMap[ln] = {}; });\n\n  const addToSet = (outerLnum, outerN, innerLnum, innerN) => {\n    if (!idMap[outerLnum][outerN]) {\n      idMap[outerLnum][outerN] = {};\n\n      lnums.forEach((ln) => { idMap[outerLnum][outerN][ln] = new Set(); });\n    }\n\n    idMap[outerLnum][outerN][innerLnum].add(innerN);\n  };\n\n  // This is the hairiest part of the algorithm. But I'm not sure if there's a better way\n  // to do things. When a word in L1 aligns with a word in L2, we add all members from\n  // the L1 set to the L2 set. (At this time, JavaScript has no Set unify operation.)\n  // We then actually set the pointer for L1 and L2 to the *same Set*. This means\n  // that any future additions affect both L1 and L2. The reason we do this is to account\n  // for \"sibling\" words: two words with the same lnum that align to the same word in\n  // the other lnum.\n  const unifySets = (lnum1, n1, lnum2, n2) => {\n    idMap[lnum1][n1][lnum1].forEach((v) => idMap[lnum2][n2][lnum1].add(v));\n    idMap[lnum1][n1][lnum2].forEach((v) => idMap[lnum2][n2][lnum2].add(v));\n\n    idMap[lnum2][n2][lnum1] = idMap[lnum1][n1][lnum1];\n    idMap[lnum2][n2][lnum2] = idMap[lnum1][n1][lnum2];\n  };\n\n  sentence.wds.forEach((wd) => {\n    const { lnum } = wd.$;\n\n    wd.w.forEach((word) => {\n      const { n } = word.$;\n      // Align every word with itself\n      addToSet(lnum, n, lnum, n);\n\n      if (word.refs) {\n        const nrefs = word.refs[0].$.nrefs.split(/\\s+/);\n\n        lnums.forEach((lnumRef) => {\n          if (lnumRef !== lnum) {\n            nrefs.forEach((nref) => {\n              addToSet(lnum, n, lnumRef, nref);\n              addToSet(lnumRef, nref, lnum, n);\n              unifySets(lnum, n, lnumRef, nref);\n            });\n          }\n        });\n      }\n    });\n  });\n\n  return idMap;\n};\n\n// eslint-disable-next-line react/prop-types\nconst WrappedSentence = ({ n, json, children }) => {\n  const [active, setActive] = useState(null);\n  useEffect(() => { setActive(null); }, [n, json]);\n\n  const alignedText = json['aligned-text'];\n  const sentence = (alignedText.sentence || []).find(({ $: { n: sentenceN } }) => n === sentenceN);\n  const idMap = buildIdMap(alignedText, sentence);\n\n  const toggleActive = ([lnum, wordId]) => {\n    if (active && active.aligned && active.aligned[lnum] && active.aligned[lnum].has(wordId)) {\n      setActive(null);\n    } else if (idMap[lnum] && idMap[lnum][wordId]) {\n      setActive({\n        selected: { lnum, n },\n        aligned: idMap[lnum][wordId],\n      });\n    }\n  };\n\n  return (\n    <SentenceContext.Provider value={{\n      sentence,\n      active,\n      toggleActive,\n    }}\n    >\n      {children}\n    </SentenceContext.Provider>\n  );\n};\n\nconst Sentence = ({ n, children }) => (\n  <AlignmentContext.Consumer>\n    {({ json }) => (\n      <WrappedSentence n={n} json={json}>\n        {children}\n      </WrappedSentence>\n    )}\n  </AlignmentContext.Consumer>\n);\n\nWrappedSentence.propTypes = {\n  n: string.isRequired,\n  json: alignmentType.isRequired,\n  children: node,\n};\n\nWrappedSentence.defaultProps = {\n  children: null,\n};\n\nSentence.propTypes = {\n  n: string.isRequired,\n  children: node,\n};\n\nSentence.defaultProps = {\n  children: null,\n};\n\nexport default Sentence;\n","import React, { Fragment } from 'react';\nimport { func } from 'prop-types';\n\nimport { activeType, sentenceType } from '../../types';\n\nimport styles from './Xml.module.scss';\n\n// The space in the quotes below is the non-breaking space (&nbsp;)\nconst tab = (indent) => <>{' '.repeat(indent * 4)}</>;\n\nconst attributesToJsx = (attributes) => (\n  Object.entries(attributes || {}).map(([key, value]) => (\n    <Fragment key={key}>\n      {' '}\n      <span className={styles.attribute}>\n        {key}\n        =\n      </span>\n      <span className={styles.attributeText}>\n        &quot;\n        {value}\n        &quot;\n      </span>\n    </Fragment>\n  ))\n);\n\nconst openingTag = (name, attributes, key, indent = 0, close = false, br = true) => (\n  <Fragment key={key}>\n    <span className={styles.bracket}>\n      {tab(indent)}\n      &lt;\n    </span>\n    <span className={styles.element}>{name}</span>\n    {attributesToJsx(attributes)}\n    {close ? ' /' : ''}\n    <span className={styles.bracket}>&gt;</span>\n    {br && <br />}\n  </Fragment>\n);\n\nconst closingTag = (name, key, indent = 0) => (\n  <Fragment key={key}>\n    <span className={styles.bracket}>\n      {tab(indent)}\n      &lt;\n    </span>\n    <span className={styles.element}>\n      /\n      {name}\n    </span>\n    <span className={styles.bracket}>&gt;</span>\n  </Fragment>\n);\n\nconst renderComment = (comment, key, indent) => {\n  const { _, $ } = comment;\n\n  if (_) {\n    return (\n      <div key={key}>\n        {openingTag('comment', $, `open-${key}`, indent, false, false)}\n        {_}\n        {closingTag('comment', `close-${key}`)}\n      </div>\n    );\n  }\n\n  return (\n    <div key={key}>\n      {openingTag('comment', comment.$, key, indent, true)}\n    </div>\n  );\n};\n\nconst renderText = (text, key, indent) => {\n  const { _, $ } = text;\n\n  return (\n    <div key={key}>\n      {openingTag('text', $, `open-${key}`, indent, false, false)}\n      {_}\n      {closingTag('text', `close-${key}`)}\n    </div>\n  );\n};\n\nconst renderWord = (word, key, lnum, active, toggleActive, indent) => {\n  const {\n    text, refs, comment, $: { n },\n  } = word;\n\n  const classes = [styles.word];\n  const onClick = () => {\n    toggleActive([lnum, n]);\n  };\n  const onKeyDown = (event) => {\n    const { key: eventKey } = event;\n\n    if (eventKey === 'Enter') {\n      onClick(event);\n    }\n  };\n\n  if (active && active.aligned && active.aligned[lnum] && active.aligned[lnum].has(n)) {\n    classes.push(styles.active);\n  }\n\n  return (\n    <div\n      key={`${lnum}-${n}`}\n      role=\"button\"\n      tabIndex=\"0\"\n      className={classes.join(' ')}\n      onClick={onClick}\n      onKeyDown={onKeyDown}\n    >\n      {openingTag('w', word.$, `open-${key}`, indent)}\n      {comment && comment.map((cmt, ii) => renderComment(cmt, `comment-${key}-${ii}`, indent + 1))}\n      {text && text.map((txt, ii) => renderText(txt, `text-${key}-${ii}`, indent + 1))}\n      {refs && refs.map((rfs, ii) => openingTag('refs', rfs.$, `ref-${key}-${ii}`, indent + 1))}\n      {closingTag('w', `close-${key}`, indent)}\n    </div>\n  );\n};\n\nconst renderWordList = (wordList, active, toggleActive) => {\n  const { w, comment, $ } = wordList;\n  const { lnum } = $;\n\n  return (\n    <Fragment key={lnum}>\n      {openingTag('wds', $, `open-${lnum}`, 2, true)}\n      {comment && comment.map((cmt, ii) => renderComment(cmt, `${lnum}-${ii}`, 3))}\n      {w && w.map((word, ii) => renderWord(word, `${lnum}-${ii}`, lnum, active, toggleActive, 3))}\n      {closingTag('wds', `close-${lnum}`, 2)}\n      <br />\n    </Fragment>\n  );\n};\n\nconst Xml = ({\n  sentence, active, toggleActive,\n}) => (\n  <div className={styles.xml}>\n    {openingTag('sentence', sentence.$, 'sentence')}\n    {sentence.wds && sentence.wds.map((wordList) => (\n      renderWordList(wordList, active, toggleActive)\n    ))}\n    {closingTag('sentence', 'sentence-close')}\n  </div>\n);\n\nXml.propTypes = {\n  active: activeType,\n  sentence: sentenceType.isRequired,\n  toggleActive: func,\n};\n\nXml.defaultProps = {\n  active: null,\n  toggleActive: () => {},\n};\n\nexport default Xml;\n","import React from 'react';\n\nimport SentenceContext from '../sentence-context';\n\nimport Xml from '../../Xml';\n\nconst XmlWithContext = () => (\n  <SentenceContext.Consumer>\n    {({ sentence, active, toggleActive }) => (\n      <Xml\n        sentence={sentence}\n        active={active}\n        toggleActive={toggleActive}\n      />\n    )}\n  </SentenceContext.Consumer>\n);\n\nexport default XmlWithContext;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\n\nimport styles from './App.module.scss';\n\nimport {\n  Alignment,\n  Collapse,\n  Comments,\n  Sentence,\n  Segment,\n  Xml,\n} from 'alignment-react';\nimport 'alignment-react/build/index.css';\n\n// Public domain text from:\n//   Herodotus, with an English translation by A. D. Godley.\n//   Harvard University Press. 1920.\n// Alignment created for this demo\nconst xml = `\n<aligned-text xmlns=\"http://alpheios.net/namespaces/aligned-text\">\n    <language lnum=\"L1\" xml:lang=\"grc\"/>\n    <language lnum=\"L2\" xml:lang=\"eng\"/>\n    <sentence n=\"1\">\n        <wds lnum=\"L1\">\n            <comment class=\"uri\"/>\n            <w n=\"1-1\">\n                <text>Ἡροδότου</text>\n                <refs nrefs=\"1-8 1-9\"/>\n            </w>\n            <w n=\"1-2\">\n                <text>Ἁλικαρνησσέος</text>\n                <refs nrefs=\"1-10 1-11\"/>\n            </w>\n            <w n=\"1-3\">\n                <text>ἱστορίης</text>\n                <comment class=\"mark\">Sometimes translated as \"history\"</comment>\n                <refs nrefs=\"1-5 1-6 1-7\"/>\n            </w>\n            <w n=\"1-4\">\n                <text>ἀπόδεξις</text>\n                <refs nrefs=\"1-3 1-4\"/>\n            </w>\n            <w n=\"1-5\">\n                <text>ἥδε</text>\n                <refs nrefs=\"1-1 1-2\"/>\n            </w>\n            <w n=\"1-6\">\n                <text>,</text>\n                <refs nrefs=\"1-12\"/>\n            </w>\n            <w n=\"1-7\">\n                <text>ὡς</text>\n                <refs nrefs=\"1-13 1-14 1-26\"/>\n            </w>\n            <w n=\"1-8\">\n                <text>μήτε</text>\n                <refs nrefs=\"1-19\"/>\n            </w>\n            <w n=\"1-9\">\n                <text>τὰ</text>\n                <refs nrefs=\"1-15 1-16\"/>\n            </w>\n            <w n=\"1-10\">\n                <text>γενόμενα</text>\n                <refs nrefs=\"1-15 1-16\"/>\n            </w>\n            <w n=\"1-11\">\n                <text>ἐξ</text>\n                <refs nrefs=\"1-17\"/>\n            </w>\n            <w n=\"1-12\">\n                <text>ἀνθρώπων</text>\n                <refs nrefs=\"1-18\"/>\n            </w>\n            <w n=\"1-13\">\n                <text>τῷ</text>\n                <refs nrefs=\"1-22 1-23\"/>\n            </w>\n            <w n=\"1-14\">\n                <text>χρόνῳ</text>\n                <refs nrefs=\"1-22 1-23\"/>\n            </w>\n            <w n=\"1-15\">\n                <text>ἐξίτηλα</text>\n                <refs nrefs=\"1-21\"/>\n            </w>\n            <w n=\"1-16\">\n                <text>γένηται</text>\n                <refs nrefs=\"1-20\"/>\n            </w>\n            <w n=\"1-17\">\n                <text>,</text>\n                <refs nrefs=\"1-24\"/>\n            </w>\n            <w n=\"1-18\">\n                <text>μήτε</text>\n                <refs nrefs=\"1-25 1-43\"/>\n            </w>\n            <w n=\"1-19\">\n                <text>ἔργα</text>\n                <refs nrefs=\"1-30\"/>\n            </w>\n            <w n=\"1-20\">\n                <text>μεγάλα</text>\n                <refs nrefs=\"1-27\"/>\n            </w>\n            <w n=\"1-21\">\n                <text>τε</text>\n                <refs nrefs=\"1-28\"/>\n            </w>\n            <w n=\"1-22\">\n                <text>καὶ</text>\n                <refs nrefs=\"1-28\"/>\n            </w>\n            <w n=\"1-23\">\n                <text>θωμαστά</text>\n                <refs nrefs=\"1-29\"/>\n            </w>\n            <w n=\"1-24\">\n                <text>,</text>\n                <refs nrefs=\"1-31\"/>\n            </w>\n            <w n=\"1-25\">\n                <text>τὰ</text>\n                <refs nrefs=\"1-32\"/>\n            </w>\n            <w n=\"1-26\">\n                <text>μὲν</text>\n                <refs nrefs=\"1-32\"/>\n            </w>\n            <w n=\"1-27\">\n                <text>Ἕλλησι</text>\n                <refs nrefs=\"1-34 1-35 1-36\"/>\n            </w>\n            <w n=\"1-28\">\n                <text>τὰ</text>\n                <refs nrefs=\"1-37 1-38\"/>\n            </w>\n            <w n=\"1-29\">\n                <text>δὲ</text>\n                <refs nrefs=\"1-37 1-38\"/>\n            </w>\n            <w n=\"1-30\">\n                <text>βαρβάροισι</text>\n                <refs nrefs=\"1-39 1-40 1-41\"/>\n            </w>\n            <w n=\"1-31\">\n                <text>ἀποδεχθέντα</text>\n                <refs nrefs=\"1-33\"/>\n            </w>\n            <w n=\"1-32\">\n                <text>,</text>\n                <refs nrefs=\"1-42\"/>\n            </w>\n            <w n=\"1-33\">\n                <text>ἀκλεᾶ</text>\n                <refs nrefs=\"1-45 1-46\"/>\n            </w>\n            <w n=\"1-34\">\n                <text>γένηται</text>\n                <refs nrefs=\"1-44\"/>\n            </w>\n            <w n=\"1-35\">\n                <text>,</text>\n                <refs nrefs=\"1-47\"/>\n            </w>\n            <w n=\"1-36\">\n                <text>τά</text>\n                <refs nrefs=\"1-48 1-49 1-50\"/>\n            </w>\n            <w n=\"1-37\">\n                <text>τε</text>\n                <refs nrefs=\"1-48 1-49 1-50\"/>\n            </w>\n            <w n=\"1-38\">\n                <text>ἄλλα</text>\n                <refs nrefs=\"1-48 1-49 1-50\"/>\n            </w>\n            <w n=\"1-39\">\n                <text>καὶ</text>\n                <refs nrefs=\"1-48 1-49 1-50\"/>\n            </w>\n            <w n=\"1-40\">\n                <text>δι᾽</text>\n                <refs nrefs=\"1-51 1-52\"/>\n            </w>\n            <w n=\"1-41\">\n                <text>ἣν</text>\n                <refs nrefs=\"1-51 1-52\"/>\n            </w>\n            <w n=\"1-42\">\n                <text>αἰτίην</text>\n                <refs nrefs=\"1-53 1-54 1-55\"/>\n            </w>\n            <w n=\"1-43\">\n                <text>ἐπολέμησαν</text>\n                <refs nrefs=\"1-56 1-57 1-58\"/>\n            </w>\n            <w n=\"1-44\">\n                <text>ἀλλήλοισι</text>\n                <refs nrefs=\"1-59 1-60 1-61\"/>\n            </w>\n            <w n=\"1-45\">\n                <text>.</text>\n                <refs nrefs=\"1-62\"/>\n            </w>\n        </wds>\n        <wds lnum=\"L2\">\n            <comment class=\"uri\"/>\n            <w n=\"1-1\">\n                <text>This</text>\n                <refs nrefs=\"1-5\"/>\n            </w>\n            <w n=\"1-2\">\n                <text>is</text>\n                <refs nrefs=\"1-5\"/>\n            </w>\n            <w n=\"1-3\">\n                <text>the</text>\n                <refs nrefs=\"1-4\"/>\n            </w>\n            <w n=\"1-4\">\n                <text>display</text>\n                <refs nrefs=\"1-4\"/>\n            </w>\n            <w n=\"1-5\">\n                <comment class=\"mark\">English often uses multiple words where Greek uses the genitive</comment>\n                <text>of</text>\n                <refs nrefs=\"1-3\"/>\n            </w>\n            <w n=\"1-6\">\n                <text>the</text>\n                <refs nrefs=\"1-3\"/>\n            </w>\n            <w n=\"1-7\">\n                <text>inquiry</text>\n                <refs nrefs=\"1-3\"/>\n            </w>\n            <w n=\"1-8\">\n                <text>of</text>\n                <refs nrefs=\"1-1\"/>\n            </w>\n            <w n=\"1-9\">\n                <text>Herodotus</text>\n                <refs nrefs=\"1-1\"/>\n            </w>\n            <w n=\"1-10\">\n                <text>of</text>\n                <refs nrefs=\"1-2\"/>\n            </w>\n            <w n=\"1-11\">\n                <text>Halicarnassus</text>\n                <refs nrefs=\"1-2\"/>\n            </w>\n            <w n=\"1-12\">\n                <text>,</text>\n                <refs nrefs=\"1-6\"/>\n            </w>\n            <w n=\"1-13\">\n                <text>so</text>\n                <refs nrefs=\"1-7\"/>\n            </w>\n            <w n=\"1-14\">\n                <text>that</text>\n                <refs nrefs=\"1-7\"/>\n            </w>\n            <w n=\"1-15\">\n                <text>things</text>\n                <refs nrefs=\"1-9 1-10\"/>\n            </w>\n            <w n=\"1-16\">\n                <text>done</text>\n                <refs nrefs=\"1-9 1-10\"/>\n            </w>\n            <w n=\"1-17\">\n                <text>by</text>\n                <refs nrefs=\"1-11\"/>\n            </w>\n            <w n=\"1-18\">\n                <text>man</text>\n                <refs nrefs=\"1-12\"/>\n            </w>\n            <w n=\"1-19\">\n                <text>not</text>\n                <refs nrefs=\"1-8\"/>\n            </w>\n            <w n=\"1-20\">\n                <text>be</text>\n                <refs nrefs=\"1-16\"/>\n            </w>\n            <w n=\"1-21\">\n                <text>forgotten</text>\n                <refs nrefs=\"1-15\"/>\n            </w>\n            <w n=\"1-22\">\n                <text>in</text>\n                <refs nrefs=\"1-13 1-14\"/>\n            </w>\n            <w n=\"1-23\">\n                <text>time</text>\n                <refs nrefs=\"1-13 1-14\"/>\n            </w>\n            <w n=\"1-24\">\n                <text>,</text>\n                <refs nrefs=\"1-17\"/>\n            </w>\n            <w n=\"1-25\">\n                <text>and</text>\n                <refs nrefs=\"1-18\"/>\n            </w>\n            <w n=\"1-26\">\n                <text>that</text>\n                <refs nrefs=\"1-7\"/>\n            </w>\n            <w n=\"1-27\">\n                <text>great</text>\n                <refs nrefs=\"1-20\"/>\n            </w>\n            <w n=\"1-28\">\n                <text>and</text>\n                <refs nrefs=\"1-21 1-22\"/>\n            </w>\n            <w n=\"1-29\">\n                <text>marvelous</text>\n                <refs nrefs=\"1-23\"/>\n            </w>\n            <w n=\"1-30\">\n                <text>deeds</text>\n                <refs nrefs=\"1-19\"/>\n            </w>\n            <w n=\"1-31\">\n                <text>,</text>\n                <refs nrefs=\"1-24\"/>\n            </w>\n            <w n=\"1-32\">\n                <text>some</text>\n                <refs nrefs=\"1-25 1-26\"/>\n            </w>\n            <w n=\"1-33\">\n                <text>displayed</text>\n                <refs nrefs=\"1-31\"/>\n            </w>\n            <w n=\"1-34\">\n                <text>by</text>\n                <refs nrefs=\"1-27\"/>\n            </w>\n            <w n=\"1-35\">\n                <text>the</text>\n                <refs nrefs=\"1-27\"/>\n            </w>\n            <w n=\"1-36\">\n                <text>Hellenes</text>\n                <refs nrefs=\"1-27\"/>\n            </w>\n            <w n=\"1-37\">\n                <text>,</text>\n                <refs nrefs=\"1-28 1-29\"/>\n            </w>\n            <w n=\"1-38\">\n                <text>some</text>\n                <refs nrefs=\"1-28 1-29\"/>\n            </w>\n            <w n=\"1-39\">\n                <text>by</text>\n                <refs nrefs=\"1-30\"/>\n            </w>\n            <w n=\"1-40\">\n                <text>the</text>\n                <refs nrefs=\"1-30\"/>\n            </w>\n            <w n=\"1-41\">\n                <text>barbarians</text>\n                <refs nrefs=\"1-30\"/>\n            </w>\n            <w n=\"1-42\">\n                <text>,</text>\n                <refs nrefs=\"1-32\"/>\n            </w>\n            <w n=\"1-43\">\n                <text>not</text>\n                <refs nrefs=\"1-18\"/>\n            </w>\n            <w n=\"1-44\">\n                <text>lose</text>\n                <refs nrefs=\"1-34\"/>\n            </w>\n            <w n=\"1-45\">\n                <text>their</text>\n                <refs nrefs=\"1-33\"/>\n            </w>\n            <w n=\"1-46\">\n                <text>glory</text>\n                <refs nrefs=\"1-33\"/>\n            </w>\n            <w n=\"1-47\">\n                <text>,</text>\n                <refs nrefs=\"1-35\"/>\n            </w>\n            <w n=\"1-48\">\n                <text>including</text>\n                <refs nrefs=\"1-36 1-37 1-38 1-39\"/>\n            </w>\n            <w n=\"1-49\">\n                <text>among</text>\n                <refs nrefs=\"1-36 1-37 1-38 1-39\"/>\n            </w>\n            <w n=\"1-50\">\n                <text>others</text>\n                <refs nrefs=\"1-36 1-37 1-38 1-39\"/>\n            </w>\n            <w n=\"1-51\">\n                <text>what</text>\n                <refs nrefs=\"1-40 1-41\"/>\n            </w>\n            <w n=\"1-52\">\n                <text>was</text>\n                <refs nrefs=\"1-40 1-41\"/>\n            </w>\n            <w n=\"1-53\">\n                <text>the</text>\n                <refs nrefs=\"1-42\"/>\n            </w>\n            <w n=\"1-54\">\n                <text>cause</text>\n                <refs nrefs=\"1-42\"/>\n            </w>\n            <w n=\"1-55\">\n                <text>of</text>\n                <refs nrefs=\"1-42\"/>\n            </w>\n            <w n=\"1-56\">\n                <text>their</text>\n                <refs nrefs=\"1-43\"/>\n            </w>\n            <w n=\"1-57\">\n                <text>waging</text>\n                <refs nrefs=\"1-43\"/>\n            </w>\n            <w n=\"1-58\">\n                <text>war</text>\n                <refs nrefs=\"1-43\"/>\n            </w>\n            <w n=\"1-59\">\n                <text>on</text>\n                <refs nrefs=\"1-44\"/>\n            </w>\n            <w n=\"1-60\">\n                <text>each</text>\n                <refs nrefs=\"1-44\"/>\n            </w>\n            <w n=\"1-61\">\n                <text>other</text>\n                <refs nrefs=\"1-44\"/>\n            </w>\n            <w n=\"1-62\">\n                <text>.</text>\n                <refs nrefs=\"1-45\"/>\n            </w>\n        </wds>\n    </sentence>\n</aligned-text>\n`;\n\nconst App = () => (\n  <div className={styles.alignment}>\n    <Alignment alignment={xml}>\n      <Sentence n=\"1\">\n        <Segment lnum=\"L1\" />\n        <Segment lnum=\"L2\" />\n        <Comments />\n        <Collapse title=\"XML\">\n          <Xml />\n        </Collapse>\n      </Sentence>\n    </Alignment>\n  </div>\n);\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}